// Generated by view binder compiler. Do not edit!
package com.example.kotlinproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kotlinproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentListScreenBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final FrameLayout listFrame;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final TextView pageNumber;

  @NonNull
  public final LinearLayout paginationButtons;

  @NonNull
  public final Button previousButton;

  @NonNull
  public final RecyclerView recyclerView;

  private FragmentListScreenBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout layout,
      @NonNull FrameLayout listFrame, @NonNull Button nextButton, @NonNull TextView pageNumber,
      @NonNull LinearLayout paginationButtons, @NonNull Button previousButton,
      @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.layout = layout;
    this.listFrame = listFrame;
    this.nextButton = nextButton;
    this.pageNumber = pageNumber;
    this.paginationButtons = paginationButtons;
    this.previousButton = previousButton;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentListScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentListScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_list_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentListScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      FrameLayout listFrame = (FrameLayout) rootView;

      id = R.id.next_button;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.page_number;
      TextView pageNumber = ViewBindings.findChildViewById(rootView, id);
      if (pageNumber == null) {
        break missingId;
      }

      id = R.id.pagination_buttons;
      LinearLayout paginationButtons = ViewBindings.findChildViewById(rootView, id);
      if (paginationButtons == null) {
        break missingId;
      }

      id = R.id.previous_button;
      Button previousButton = ViewBindings.findChildViewById(rootView, id);
      if (previousButton == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new FragmentListScreenBinding((FrameLayout) rootView, layout, listFrame, nextButton,
          pageNumber, paginationButtons, previousButton, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
